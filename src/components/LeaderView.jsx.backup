import React, { useState, useEffect } from 'react'
import { databaseService } from '../supabase'

export default function LeaderView({ user, onSuccess }) {
  const [expenses, setExpenses] = useState([])
  const [customers, setCustomers] = useState([])
  const [approvedExpenses, setApprovedExpenses] = useState([])
  const [loading, setLoading] = useState(true)
  const [selectedExpense, setSelectedExpense] = useState(null)
  const [showModal, setShowModal] = useState(false)
  const [activeTab, setActiveTab] = useState('expenses')
  const [showExpenseModal, setShowExpenseModal] = useState(false)
  const [expenseForm, setExpenseForm] = useState({
    amount: '',
    purpose: '',
    category: '',
    type: '',
    note: '',
    paymentMethod: '银行转账',
    payeeName: '',
    payeeContact: '',
    payeeAccount: '',
    payeeBank: '',
    receiptImage: null,
    receiptImageUrl: '',
    receiptImagePath: ''
  })
  const [expenseStep, setExpenseStep] = useState(1)
  
  // 申请类型分类
  const expenseCategories = {
    '设备费用': {
      label: '设备费用',
      icon: '💻',
      types: [
        { value: '手机', label: '手机', icon: '📱' },
        { value: '电脑', label: '电脑', icon: '💻' },
        { value: '平板', label: '平板', icon: '📱' },
        { value: '打印机', label: '打印机', icon: '🖨️' },
        { value: '服务器', label: '服务器', icon: '🖥️' },
        { value: '网络设备', label: '网络设备', icon: '🌐' },
        { value: '其他设备', label: '其他设备', icon: '🔧' }
      ]
    },
    '物业费用': {
      label: '物业费用',
      icon: '🏢',
      types: [
        { value: '房租', label: '房租', icon: '🏠' },
        { value: '水电费', label: '水电费', icon: '⚡' },
        { value: '网络费', label: '网络费', icon: '🌐' },
        { value: '物业费', label: '物业费', icon: '🏢' },
        { value: '停车费', label: '停车费', icon: '🅿️' },
        { value: '清洁费', label: '清洁费', icon: '🧹' },
        { value: '其他物业', label: '其他物业', icon: '🏢' }
      ]
    },
    '差旅费用': {
      label: '差旅费用',
      icon: '✈️',
      types: [
        { value: '交通费', label: '交通费', icon: '🚗' },
        { value: '住宿费', label: '住宿费', icon: '🏨' },
        { value: '餐饮费', label: '餐饮费', icon: '🍽️' },
        { value: '机票费', label: '机票费', icon: '✈️' },
        { value: '火车票', label: '火车票', icon: '🚄' },
        { value: '出租车费', label: '出租车费', icon: '🚕' },
        { value: '其他差旅', label: '其他差旅', icon: '🎒' }
      ]
    },
    '办公费用': {
      label: '办公费用',
      icon: '📋',
      types: [
        { value: '文具用品', label: '文具用品', icon: '✏️' },
        { value: '办公软件', label: '办公软件', icon: '💿' },
        { value: '办公家具', label: '办公家具', icon: '🪑' },
        { value: '办公耗材', label: '办公耗材', icon: '📄' },
        { value: '快递费', label: '快递费', icon: '📦' },
        { value: '印刷费', label: '印刷费', icon: '🖨️' },
        { value: '其他办公', label: '其他办公', icon: '📋' }
      ]
    },
    '培训费用': {
      label: '培训费用',
      icon: '🎓',
      types: [
        { value: '课程费用', label: '课程费用', icon: '📚' },
        { value: '培训材料', label: '培训材料', icon: '📖' },
        { value: '考试费用', label: '考试费用', icon: '📝' },
        { value: '认证费用', label: '认证费用', icon: '🏆' },
        { value: '会议费用', label: '会议费用', icon: '👥' },
        { value: '研讨会', label: '研讨会', icon: '🎤' },
        { value: '其他培训', label: '其他培训', icon: '🎓' }
      ]
    },
    '营销费用': {
      label: '营销费用',
      icon: '📢',
      types: [
        { value: '广告费', label: '广告费', icon: '📺' },
        { value: '推广费', label: '推广费', icon: '📢' },
        { value: '活动费', label: '活动费', icon: '🎉' },
        { value: '礼品费', label: '礼品费', icon: '🎁' },
        { value: '宣传材料', label: '宣传材料', icon: '📄' },
        { value: '展会费用', label: '展会费用', icon: '🏢' },
        { value: '其他营销', label: '其他营销', icon: '📢' }
      ]
    }
  }

  useEffect(() => {
    loadData()
  }, [user])

  const loadData = async () => {
    setLoading(true)
    try {
      console.log('组长加载数据，用户信息:', user)
      
      // 组长可以看到自己下级的申请记录和自己提交的申请
      const subordinateExpenses = await databaseService.getSubordinateExpenses(user.id, user.role, { 
        status: 'submitted'
      })
      
      // 获取组长自己提交的申请
      const myExpenses = await databaseService.getExpenses({ 
        created_by: user.id,
        status: ['waiting_supervisor', 'waiting_finance', 'paid', 'rejected']
      })
      
      // 合并数据，避免重复
      const allExpenses = [...subordinateExpenses]
      myExpenses.forEach(myExpense => {
        if (!allExpenses.find(exp => exp.id === myExpense.id)) {
          allExpenses.push(myExpense)
        }
      })
      
      console.log('组长申请数据:', allExpenses)
      setExpenses(allExpenses)
      
      // 获取本月已审批的申请
      const approvedData = await databaseService.getSubordinateExpenses(user.id, user.role, { 
        status: 'waiting_supervisor'
      })
      console.log('本月已审批数据:', approvedData)
      setApprovedExpenses(approvedData)
      
      // 组长可以看到所有客户数据
      const customersData = await databaseService.getCustomers()
      console.log('客户数据:', customersData)
      setCustomers(customersData)
    } catch (error) {
      console.error('加载数据失败:', error)
    } finally {
      setLoading(false)
    }
  }

  const handleApproval = async (expenseId, action, comment = '') => {
    try {
      console.log('开始审批操作:', { expenseId, action, comment, userId: user.id, user: user })
      
      // 检查用户信息
      if (!user || !user.id) {
        alert('用户信息错误，请重新登录')
        return
      }
      
      const newStatus = action === 'approve' ? 'waiting_supervisor' : 'rejected'
      console.log('准备更新状态:', newStatus)
      
      const result = await databaseService.updateExpenseStatus(
        expenseId, 
        newStatus, 
        action, 
        comment, 
        user.id
      )
      
      console.log('审批结果:', result)
      
      if (result) {
        alert(action === 'approve' ? '已批准申请！' : '已拒绝申请！')
        loadData()
        onSuccess?.()
        setShowModal(false)
        setSelectedExpense(null)
      } else {
        console.error('审批操作返回null')
        alert('操作失败，请重试')
      }
    } catch (error) {
      console.error('审批操作失败:', error)
      alert(`操作失败: ${error.message || '请重试'}`)
    }
  }

  const openModal = (expense) => {
    setSelectedExpense(expense)
    setShowModal(true)
  }

  // 提交申请
  const handleSubmitExpense = async (e) => {
    e.preventDefault()
    try {
      const expense = {
        company_id: '550e8400-e29b-41d4-a716-446655440000',
        created_by: user.id,
        team_id: user.team_id,
        amount: parseFloat(expenseForm.amount),
        purpose: `${expenseForm.category} - ${expenseForm.type}`,
        notes: expenseForm.note,
        status: 'waiting_supervisor', // 组长申请直接进入待主管审批状态
        attachments: {
          paymentMethod: expenseForm.paymentMethod,
          payeeName: expenseForm.payeeName,
          payeeContact: expenseForm.payeeContact,
          payeeAccount: expenseForm.payeeAccount,
          payeeBank: expenseForm.payeeBank,
          receiptImageUrl: expenseForm.receiptImageUrl,
          receiptImagePath: expenseForm.receiptImagePath,
          receiptFileName: expenseForm.receiptImage?.name || ''
        }
      }

      const result = await databaseService.addExpense(expense)
      if (result) {
        alert('申请提交成功！')
        setShowExpenseModal(false)
        setExpenseForm({
          amount: '',
          purpose: '',
          category: '',
          type: '',
          note: '',
          paymentMethod: '银行转账',
          payeeName: '',
          payeeContact: '',
          payeeAccount: '',
          payeeBank: '',
          receiptImage: null,
          receiptImageUrl: '',
          receiptImagePath: ''
        })
        setExpenseStep(1)
        loadData() // 重新加载数据
      } else {
        alert('申请提交失败，请重试')
      }
    } catch (error) {
      console.error('提交申请失败:', error)
      alert('申请提交失败，请重试')
    }
  }


  if (loading) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="text-center">
          <div className="loading-spinner mx-auto mb-4"></div>
          <div className="text-lg text-gray-600">加载中...</div>
        </div>
      </div>
    )
  }

  return (
    <div className="space-y-6">
      {/* 头部 */}
      <div className="bg-gradient-to-r from-blue-600 to-purple-600 rounded-xl p-6 text-white">
        <div className="flex items-center justify-between">
          <div>
            <h2 className="text-2xl font-bold mb-2">组长管理中心</h2>
            <p className="text-blue-100">管理团队支出申请和客户数据</p>
          </div>
          <div className="text-4xl opacity-80">👨‍💼</div>
        </div>
      </div>

      {/* 标签页导航 */}
      <div className="bg-white rounded-lg shadow-sm border border-gray-200">
        <div className="border-b border-gray-200">
          <nav className="flex space-x-8 px-6">
            {[
              { id: 'expenses', name: '支出审批', icon: '💰' },
              { id: 'myExpenses', name: '我的申请', icon: '📝' },
              { id: 'customers', name: '客户管理', icon: '👥' }
            ].map((tab) => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`py-4 px-1 border-b-2 font-medium text-sm ${
                  activeTab === tab.id
                    ? 'border-blue-500 text-blue-600'
                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                }`}
              >
                <span className="mr-2">{tab.icon}</span>
                {tab.name}
              </button>
            ))}
          </nav>
        </div>
      </div>

      {/* 统计卡片 */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">待审批</p>
              <p className="text-2xl font-bold text-yellow-600">{expenses.length}</p>
            </div>
            <div className="w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center text-2xl">
              ⏳
            </div>
          </div>
        </div>
        <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">客户总数</p>
              <p className="text-2xl font-bold text-blue-600">{customers.length}</p>
            </div>
            <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center text-2xl">
              👥
            </div>
          </div>
        </div>
        <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">本月已审批</p>
              <p className="text-2xl font-bold text-green-600">{approvedExpenses.length}</p>
            </div>
            <div className="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center text-2xl">
              ✅
            </div>
          </div>
        </div>
        <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">审批金额</p>
              <p className="text-2xl font-bold text-purple-600">¥{expenses.reduce((sum, exp) => sum + (exp.amount || 0), 0).toLocaleString()}</p>
            </div>
            <div className="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center text-2xl">
              💰
            </div>
          </div>
        </div>
      </div>

      {/* 主要内容区域 */}
      <div className="bg-white rounded-xl shadow-sm border border-gray-200">
        <div className="px-6 py-4 border-b border-gray-200">
          <div className="flex items-center justify-between">
            <h3 className="text-lg font-semibold text-gray-900">
              {activeTab === 'expenses' ? `待审批申请 (${expenses.length}笔)` : 
               activeTab === 'myExpenses' ? `我的申请 (${expenses.filter(exp => exp.created_by === user.id).length}笔)` :
               `客户管理 (${customers.length}个)`}
            </h3>
            <div className="flex items-center space-x-2">
              <span className="text-sm text-gray-500">排序:</span>
              <select className="text-sm border border-gray-300 rounded-md px-2 py-1">
                <option>按时间</option>
                <option>按金额</option>
                <option>按申请人</option>
              </select>
            </div>
          </div>
        </div>
        
        <div className="p-6">
          {activeTab === 'expenses' ? (
            // 支出审批内容
            expenses.length === 0 ? (
              <div className="text-center py-12">
                <div className="text-6xl mb-4">📝</div>
                <h3 className="text-lg font-medium text-gray-900 mb-2">暂无待审批申请</h3>
                <p className="text-gray-500">所有申请都已处理完成</p>
              </div>
            ) : (
              <div className="space-y-4">
                {expenses.map((expense) => (
                  <div key={expense.id} className="border border-gray-200 rounded-lg p-6 hover:shadow-md transition-all duration-300 animate-fade-in">
                    <div className="flex justify-between items-start">
                      <div className="flex-1">
                        <div className="flex items-center space-x-4 mb-4">
                          <div className="w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center">
                            <span className="text-blue-600 font-medium">
                              {expense.creator?.name?.charAt(0) || 'U'}
                            </span>
                          </div>
                          <div className="flex-1">
                            <div className="flex items-center space-x-2 mb-1">
                              <h4 className="font-medium text-gray-900">{expense.creator?.name || '未知申请人'}</h4>
                              <span className={`px-2 py-1 text-xs rounded-full ${
                                expense.creator?.role === 'team_leader' 
                                  ? 'bg-purple-100 text-purple-700' 
                                  : 'bg-green-100 text-green-700'
                              }`}>
                                {expense.creator?.role === 'team_leader' ? '👨‍💼 组长' : '👤 员工'}
                              </span>
                            </div>
                            <div className="flex items-center space-x-4 text-sm text-gray-500">
                              <span>🏢 {expense.team?.name || '未知团队'}</span>
                              <span>📅 {new Date(expense.applied_at).toLocaleDateString()}</span>
                            </div>
                          </div>
                          <div className="text-right">
                            <div className="text-sm text-gray-500 mb-1">审批人</div>
                            <div className="flex items-center space-x-2">
                              <div className="w-8 h-8 bg-orange-100 rounded-full flex items-center justify-center">
                                <span className="text-orange-600 font-medium text-sm">
                                  {user?.name?.charAt(0) || 'L'}
                                </span>
                              </div>
                              <span className="text-sm font-medium text-gray-900">{user?.name}</span>
                              <span className="px-2 py-1 text-xs bg-orange-100 text-orange-700 rounded-full">👨‍💼 组长</span>
                            </div>
                          </div>
                        </div>
                        
                        <div className="grid grid-cols-2 gap-6 mb-4">
                          <div>
                            <span className="text-sm font-medium text-gray-600">申请金额:</span>
                            <p className="text-xl font-bold text-gray-900">¥{expense.amount}</p>
                          </div>
                          <div>
                            <span className="text-sm font-medium text-gray-600">用途说明:</span>
                            <p className="text-sm text-gray-900">{expense.purpose}</p>
                          </div>
                        </div>
                        
                        {expense.notes && (
                          <div className="mb-4">
                            <span className="text-sm font-medium text-gray-600">备注:</span>
                            <p className="text-sm text-gray-900">{expense.notes}</p>
                          </div>
                        )}
                        
                        {/* AI审核建议 */}
                        <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4">
                          <div className="flex items-center mb-2">
                            <span className="text-sm font-medium text-blue-900">🤖 AI审核建议</span>
                          </div>
                          <div className="grid grid-cols-3 gap-4 text-sm">
                            <div>
                              <span className="font-medium">决策:</span> 
                              <span className="ml-1 text-green-600">建议通过</span>
                            </div>
                            <div>
                              <span className="font-medium">原因:</span> 申请金额合理，用途明确
                            </div>
                            <div>
                              <span className="font-medium">置信度:</span> 85%
                            </div>
                          </div>
                        </div>
                      </div>
                      
                      {/* 操作按钮 */}
                      <div className="flex flex-col space-y-3 ml-6">
                        <button
                          onClick={() => openModal(expense)}
                          className="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 text-sm font-medium transition-colors duration-200"
                        >
                          📋 查看详情
                        </button>
                        
                        {/* 如果是自己提交的申请，只显示状态，不显示审批按钮 */}
                        {expense.created_by === user.id ? (
                          <div className="px-4 py-2 bg-blue-50 text-blue-700 rounded-lg text-sm font-medium text-center">
                            {expense.status === 'waiting_supervisor' && '⏳ 待主管审批'}
                            {expense.status === 'waiting_finance' && '💰 待财务审批'}
                            {expense.status === 'paid' && '✅ 已支付'}
                            {expense.status === 'rejected' && '❌ 已拒绝'}
                          </div>
                        ) : (
                          <>
                            <button
                              onClick={() => handleApproval(expense.id, 'reject', '申请不符合要求')}
                              className="px-4 py-2 border border-red-300 text-red-600 rounded-lg hover:bg-red-50 text-sm font-medium transition-colors duration-200"
                            >
                              ❌ 拒绝
                            </button>
                            <button
                              onClick={() => {
                                console.log('点击批准按钮，申请ID:', expense.id)
                                console.log('当前用户:', user)
                                handleApproval(expense.id, 'approve', '同意申请')
                              }}
                              className="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 text-sm font-medium transition-colors duration-200"
                            >
                              ✅ 批准
                            </button>
                          </>
                        )}
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            )
          ) : activeTab === 'myExpenses' ? (
            // 我的申请内容
            <div className="space-y-6">
              {/* 快速操作 */}
              <div className="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-6">
                <h4 className="text-lg font-semibold text-gray-900 mb-4">快速操作</h4>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                  <button
                    onClick={() => setShowExpenseModal(true)}
                    className="bg-white border-2 border-blue-200 rounded-lg p-4 hover:border-blue-300 hover:shadow-md transition-all duration-200 text-center"
                  >
                    <div className="text-3xl mb-2">📝</div>
                    <div className="text-sm font-medium text-gray-900">提交申请</div>
                  </button>
                  <div className="bg-white border-2 border-gray-200 rounded-lg p-4 text-center opacity-50">
                    <div className="text-3xl mb-2">👥</div>
                    <div className="text-sm font-medium text-gray-500">添加客户</div>
                  </div>
                  <div className="bg-white border-2 border-gray-200 rounded-lg p-4 text-center opacity-50">
                    <div className="text-3xl mb-2">📱</div>
                    <div className="text-sm font-medium text-gray-500">设备管理</div>
                  </div>
                  <div className="bg-white border-2 border-gray-200 rounded-lg p-4 text-center opacity-50">
                    <div className="text-3xl mb-2">📊</div>
                    <div className="text-sm font-medium text-gray-500">查看报告</div>
                  </div>
                </div>
              </div>

              {/* 我的申请列表 */}
              <div>
                <div className="flex justify-between items-center mb-4">
                  <h4 className="text-lg font-semibold text-gray-900">我的申请记录</h4>
                  <button
                    onClick={() => setShowExpenseModal(true)}
                    className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors duration-200 flex items-center space-x-2"
                  >
                    <span>+</span>
                    <span>提交新申请</span>
                  </button>
                </div>
                {expenses.filter(exp => exp.created_by === user.id).length === 0 ? (
                  <div className="text-center py-12 bg-gray-50 rounded-lg">
                    <div className="text-6xl mb-4">📝</div>
                    <h3 className="text-lg font-medium text-gray-900 mb-2">暂无申请记录</h3>
                    <p className="text-gray-500 mb-4">您还没有提交过任何申请</p>
                    <button
                      onClick={() => setShowExpenseModal(true)}
                      className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors duration-200"
                    >
                      立即提交申请
                    </button>
                  </div>
                ) : (
                  <div className="space-y-4">
                    {expenses.filter(exp => exp.created_by === user.id).map((expense) => (
                      <div key={expense.id} className="border border-gray-200 rounded-lg p-6 hover:shadow-md transition-all duration-300">
                        <div className="flex justify-between items-start">
                          <div className="flex-1">
                            <div className="flex items-center space-x-4 mb-4">
                              <div className="w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center">
                                <span className="text-purple-600 font-medium">
                                  {expense.creator?.name?.charAt(0) || 'U'}
                                </span>
                              </div>
                              <div className="flex-1">
                                <div className="flex items-center space-x-2 mb-1">
                                  <h4 className="font-medium text-gray-900">{expense.creator?.name || '未知申请人'}</h4>
                                  <span className="px-2 py-1 text-xs bg-purple-100 text-purple-700 rounded-full">👨‍💼 组长</span>
                                </div>
                                <div className="flex items-center space-x-4 text-sm text-gray-500">
                                  <span>🏢 {expense.team?.name || '未知团队'}</span>
                                  <span>📅 {new Date(expense.applied_at).toLocaleDateString()}</span>
                                </div>
                              </div>
                              <div className="text-right">
                                <div className="text-sm text-gray-500 mb-1">当前审批人</div>
                                <div className="flex items-center space-x-2">
                                  <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                                    <span className="text-blue-600 font-medium text-sm">👨‍💻</span>
                                  </div>
                                  <span className="text-sm font-medium text-gray-900">主管</span>
                                  <span className="px-2 py-1 text-xs bg-blue-100 text-blue-700 rounded-full">👨‍💻 主管</span>
                                </div>
                              </div>
                            </div>
                            
                            <div className="grid grid-cols-2 gap-6 mb-4">
                              <div>
                                <span className="text-sm font-medium text-gray-600">申请金额:</span>
                                <p className="text-xl font-bold text-gray-900">¥{expense.amount}</p>
                              </div>
                              <div>
                                <span className="text-sm font-medium text-gray-600">用途说明:</span>
                                <p className="text-sm text-gray-900">{expense.purpose}</p>
                              </div>
                            </div>
                            
                            {expense.notes && (
                              <div className="mb-4">
                                <span className="text-sm font-medium text-gray-600">备注:</span>
                                <p className="text-sm text-gray-900">{expense.notes}</p>
                              </div>
                            )}
                            
                            {/* 申请状态 */}
                            <div className="flex items-center space-x-2">
                              <span className="text-sm font-medium text-gray-600">申请状态:</span>
                              <span className={`px-3 py-1 text-sm font-medium rounded-full ${
                                expense.status === 'waiting_supervisor' ? 'bg-yellow-100 text-yellow-800' :
                                expense.status === 'waiting_finance' ? 'bg-blue-100 text-blue-800' :
                                expense.status === 'paid' ? 'bg-green-100 text-green-800' :
                                expense.status === 'rejected' ? 'bg-red-100 text-red-800' :
                                'bg-gray-100 text-gray-800'
                              }`}>
                                {expense.status === 'waiting_supervisor' ? '⏳ 待主管审批' :
                                 expense.status === 'waiting_finance' ? '💰 待财务审批' :
                                 expense.status === 'paid' ? '✅ 已支付' :
                                 expense.status === 'rejected' ? '❌ 已拒绝' :
                                 expense.status}
                              </span>
                            </div>
                          </div>
                          
                          {/* 操作按钮 */}
                          <div className="flex flex-col space-y-3 ml-6">
                            <button
                              onClick={() => openModal(expense)}
                              className="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 text-sm font-medium transition-colors duration-200"
                            >
                              📋 查看详情
                            </button>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                )}
              </div>
            </div>
          ) : (
            // 客户管理内容
            customers.length === 0 ? (
              <div className="text-center py-12">
                <div className="text-6xl mb-4">👥</div>
                <h3 className="text-lg font-medium text-gray-900 mb-2">暂无客户数据</h3>
                <p className="text-gray-500">请先添加客户信息</p>
              </div>
            ) : (
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {customers.map((customer) => (
                  <div key={customer.id} className="border border-gray-200 rounded-lg p-6 hover:shadow-md transition-all duration-300">
                    <div className="flex items-center space-x-3 mb-4">
                      <div className="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-white font-bold">
                        {customer.name?.charAt(0) || 'C'}
                      </div>
                      <div>
                        <h4 className="font-medium text-gray-900">{customer.name}</h4>
                        <p className="text-sm text-gray-500">{customer.company}</p>
                      </div>
                    </div>
                    
                    <div className="space-y-2 text-sm">
                      <div className="flex justify-between">
                        <span className="text-gray-600">电话:</span>
                        <span>{customer.phone || '-'}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-600">邮箱:</span>
                        <span>{customer.email || '-'}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-600">预算:</span>
                        <span className="font-medium">¥{customer.budget || 0}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-600">状态:</span>
                        <span className={`px-2 py-1 rounded-full text-xs ${
                          customer.status === 'active' ? 'bg-green-100 text-green-800' :
                          customer.status === 'inactive' ? 'bg-gray-100 text-gray-800' :
                          'bg-yellow-100 text-yellow-800'
                        }`}>
                          {customer.status === 'active' ? '活跃' : 
                           customer.status === 'inactive' ? '非活跃' : '潜在'}
                        </span>
                      </div>
                    </div>
                    
                    {customer.notes && (
                      <div className="mt-4 p-3 bg-gray-50 rounded-lg">
                        <p className="text-sm text-gray-600">{customer.notes}</p>
                      </div>
                    )}
                  </div>
                ))}
              </div>
            )
          )}
        </div>
      </div>

      {/* 详情模态框 */}
      {showModal && selectedExpense && (
        <div className="fixed inset-0 z-50 overflow-y-auto">
          <div className="flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
            <div className="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" onClick={() => setShowModal(false)}></div>
            
            <div className="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
              <div className="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                <div className="sm:flex sm:items-start">
                  <div className="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-blue-100 sm:mx-0 sm:h-10 sm:w-10">
                    <span className="text-blue-600 text-lg">📋</span>
                  </div>
                  <div className="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full">
                    <h3 className="text-lg leading-6 font-medium text-gray-900 mb-4">
                      申请详情
                    </h3>
                    <div className="space-y-3">
                      <div className="flex justify-between">
                        <span className="font-medium text-gray-600">申请人:</span>
                        <span>{selectedExpense.creator?.name}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="font-medium text-gray-600">金额:</span>
                        <span className="font-bold">¥{selectedExpense.amount}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="font-medium text-gray-600">用途:</span>
                        <span>{selectedExpense.purpose}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="font-medium text-gray-600">申请时间:</span>
                        <span>{new Date(selectedExpense.applied_at).toLocaleString()}</span>
                      </div>
                      
                      {/* 财务信息 */}
                      {selectedExpense.attachments && (
                        <>
                          <div className="border-t pt-3 mt-3">
                            <h4 className="font-medium text-gray-800 mb-2">💰 财务信息</h4>
                            <div className="space-y-2">
                              <div className="flex justify-between">
                                <span className="text-sm text-gray-600">付款方式:</span>
                                <span className="text-sm">{selectedExpense.attachments.paymentMethod || '未填写'}</span>
                              </div>
                              {selectedExpense.attachments.payeeName && (
                                <div className="flex justify-between">
                                  <span className="text-sm text-gray-600">收款人:</span>
                                  <span className="text-sm">{selectedExpense.attachments.payeeName}</span>
                                </div>
                              )}
                              {selectedExpense.attachments.payeeContact && (
                                <div className="flex justify-between">
                                  <span className="text-sm text-gray-600">联系方式:</span>
                                  <span className="text-sm">{selectedExpense.attachments.payeeContact}</span>
                                </div>
                              )}
                              {selectedExpense.attachments.payeeAccount && (
                                <div className="flex justify-between">
                                  <span className="text-sm text-gray-600">收款账号:</span>
                                  <span className="text-sm font-mono text-xs">{selectedExpense.attachments.payeeAccount}</span>
                                </div>
                              )}
                              {selectedExpense.attachments.payeeBank && (
                                <div className="flex justify-between">
                                  <span className="text-sm text-gray-600">开户银行:</span>
                                  <span className="text-sm">{selectedExpense.attachments.payeeBank}</span>
                                </div>
                              )}
                            </div>
                          </div>
                          
                          {/* 图片预览 */}
                          {selectedExpense.attachments.receiptImageUrl && (
                            <div className="border-t pt-3 mt-3">
                              <h4 className="font-medium text-gray-800 mb-2">📷 凭证图片</h4>
                              <div className="text-center">
                                <img 
                                  src={selectedExpense.attachments.receiptImageUrl} 
                                  alt="凭证图片"
                                  className="max-w-full h-auto max-h-64 rounded-lg border border-gray-200 shadow-sm mx-auto"
                                  onError={(e) => {
                                    e.target.style.display = 'none'
                                    e.target.nextSibling.style.display = 'block'
                                  }}
                                />
                                <div className="hidden text-sm text-gray-500 mt-2">
                                  图片加载失败，请检查网络连接
                                </div>
                                <div className="text-xs text-gray-500 mt-1">
                                  {selectedExpense.attachments.receiptFileName || '未知文件名'}
                                </div>
                              </div>
                            </div>
                          )}
                        </>
                      )}
                    </div>
                  </div>
                </div>
              </div>
              <div className="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                <button
                  type="button"
                  className="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm"
                  onClick={() => setShowModal(false)}
                >
                  关闭
                </button>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* 申请表单模态框 */}
      {showExpenseModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg shadow-xl max-w-md w-full mx-4 max-h-[90vh] overflow-y-auto">
            <div className="p-6">
                <div className="flex justify-between items-center mb-4">
                  <h3 className="text-lg font-semibold text-gray-900">提交申请</h3>
                  <button
                    onClick={() => setShowExpenseModal(false)}
                    className="text-gray-400 hover:text-gray-600"
                  >
                    ✕
                  </button>
                </div>

                <div className="space-y-4">
                  {/* 步骤指示器 */}
                  <div className="flex items-center justify-center space-x-2 mb-6">
                    <div className={`flex items-center space-x-2 ${expenseStep >= 1 ? 'text-blue-600' : 'text-gray-400'}`}>
                      <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-medium ${
                        expenseStep >= 1 ? 'bg-blue-100 text-blue-600' : 'bg-gray-100 text-gray-400'
                      }`}>
                        1
                      </div>
                      <span className="text-xs font-medium">基本信息</span>
                    </div>
                    <div className={`w-4 h-1 ${expenseStep >= 2 ? 'bg-blue-600' : 'bg-gray-200'}`}></div>
                    <div className={`flex items-center space-x-2 ${expenseStep >= 2 ? 'text-blue-600' : 'text-gray-400'}`}>
                      <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-medium ${
                        expenseStep >= 2 ? 'bg-blue-100 text-blue-600' : 'bg-gray-100 text-gray-400'
                      }`}>
                        2
                      </div>
                      <span className="text-xs font-medium">详细信息</span>
                    </div>
                    <div className={`w-4 h-1 ${expenseStep >= 3 ? 'bg-blue-600' : 'bg-gray-200'}`}></div>
                    <div className={`flex items-center space-x-2 ${expenseStep >= 3 ? 'text-blue-600' : 'text-gray-400'}`}>
                      <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-medium ${
                        expenseStep >= 3 ? 'bg-blue-100 text-blue-600' : 'bg-gray-100 text-gray-400'
                      }`}>
                        3
                      </div>
                      <span className="text-xs font-medium">财务信息</span>
                    </div>
                  </div>

                  <form onSubmit={handleSubmitExpense}>
                    {/* 第1步：基本信息 */}
                    {expenseStep === 1 && (
                      <div className="space-y-4">
                        <div className="text-center mb-4">
                          <h4 className="text-md font-semibold text-gray-900 mb-1">选择申请类型和金额</h4>
                          <p className="text-sm text-gray-600">请选择您的申请类型并输入金额</p>
                        </div>
                        
                        <div>
                          <label className="block text-sm font-medium text-gray-700 mb-2">申请大类</label>
                          <select
                            value={expenseForm.category}
                            onChange={(e) => {
                              const category = e.target.value
                              setExpenseForm({
                                ...expenseForm, 
                                category: category,
                                type: '' // 重置小类型
                              })
                            }}
                            className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                            required
                          >
                            <option value="">请选择申请大类</option>
                            {Object.entries(expenseCategories).map(([key, category]) => (
                              <option key={key} value={key}>
                                {category.icon} {category.label}
                              </option>
                            ))}
                          </select>
                        </div>
                        
                        {expenseForm.category && (
                          <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">具体类型</label>
                            <select
                              value={expenseForm.type}
                              onChange={(e) => setExpenseForm({...expenseForm, type: e.target.value})}
                              className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                              required
                            >
                              <option value="">请选择具体类型</option>
                              {expenseCategories[expenseForm.category]?.types.map((type) => (
                                <option key={type.value} value={type.value}>
                                  {type.icon} {type.label}
                                </option>
                              ))}
                            </select>
                          </div>
                        )}
                        
                        {expenseForm.category && expenseForm.type && (
                          <div className="bg-blue-50 border border-blue-200 rounded-lg p-3">
                            <div className="flex items-center">
                              <span className="text-blue-600 text-sm">
                                {expenseCategories[expenseForm.category]?.icon} {expenseForm.category} - {expenseCategories[expenseForm.category]?.types.find(t => t.value === expenseForm.type)?.icon} {expenseForm.type}
                              </span>
                            </div>
                          </div>
                        )}
                        
                        <div>
                          <label className="block text-sm font-medium text-gray-700 mb-2">申请金额 (元)</label>
                          <div className="relative">
                            <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                              <span className="text-gray-500">¥</span>
                            </div>
                            <input
                              type="number"
                              step="0.01"
                              min="0"
                              value={expenseForm.amount}
                              onChange={(e) => setExpenseForm({...expenseForm, amount: e.target.value})}
                              className="w-full pl-8 pr-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                              placeholder="请输入金额"
                              required
                            />
                          </div>
                        </div>
                      </div>
                    )}

                    {/* 第2步：详细信息 */}
                    {expenseStep === 2 && (
                      <div className="space-y-4">
                        <div className="text-center mb-4">
                          <h4 className="text-md font-semibold text-gray-900 mb-1">填写详细信息</h4>
                          <p className="text-sm text-gray-600">请详细说明申请用途和相关信息</p>
                        </div>
                        
                        {/* 申请摘要 */}
                        <div className="bg-gray-50 rounded-lg p-3">
                          <h5 className="font-medium text-gray-900 mb-1">申请摘要</h5>
                          <div className="flex items-center space-x-3 text-sm text-gray-600">
                            <span>类型: {expenseForm.type}</span>
                            <span>金额: ¥{expenseForm.amount}</span>
                          </div>
                        </div>
                        
                        <div>
                          <label className="block text-sm font-medium text-gray-700 mb-2">用途说明</label>
                          <textarea
                            value={expenseForm.purpose}
                            onChange={(e) => setExpenseForm({...expenseForm, purpose: e.target.value})}
                            rows={3}
                            className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                            placeholder="请详细说明申请用途，包括具体项目、时间、地点等信息"
                            required
                          />
                        </div>
                        
                        <div>
                          <label className="block text-sm font-medium text-gray-700 mb-2">备注</label>
                          <textarea
                            value={expenseForm.note}
                            onChange={(e) => setExpenseForm({...expenseForm, note: e.target.value})}
                            rows={2}
                            className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                            placeholder="其他需要说明的信息（可选）"
                          />
                        </div>
                      </div>
                    )}

                    {/* 第3步：财务信息 */}
                    {expenseStep === 3 && (
                      <div className="space-y-4">
                        <div className="text-center mb-4">
                          <h4 className="text-md font-semibold text-gray-900 mb-1">填写财务信息</h4>
                          <p className="text-sm text-gray-600">请填写付款方式和收款人信息</p>
                        </div>
                        
                        {/* 申请摘要 */}
                        <div className="bg-gray-50 rounded-lg p-3">
                          <h5 className="font-medium text-gray-900 mb-1">申请摘要</h5>
                          <div className="flex items-center space-x-2 text-sm text-gray-600">
                            <span>类型: {expenseForm.type}</span>
                            <span>金额: ¥{expenseForm.amount}</span>
                            <span>用途: {expenseForm.purpose}</span>
                          </div>
                        </div>
                        
                        {/* 付款方式 */}
                        <div>
                          <label className="block text-sm font-medium text-gray-700 mb-2">付款方式</label>
                          <select
                            value={expenseForm.paymentMethod}
                            onChange={(e) => setExpenseForm({...expenseForm, paymentMethod: e.target.value})}
                            className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                          >
                            <option value="银行转账">🏦 银行转账</option>
                            <option value="支付宝">💙 支付宝</option>
                            <option value="微信支付">💚 微信支付</option>
                            <option value="USDT">₮ USDT</option>
                            <option value="现金">💵 现金</option>
                            <option value="支票">📄 支票</option>
                          </select>
                        </div>
                        
                        {/* 收款人信息 */}
                        <div className="grid grid-cols-2 gap-4">
                          <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">收款人姓名 *</label>
                            <input
                              type="text"
                              value={expenseForm.payeeName}
                              onChange={(e) => setExpenseForm({...expenseForm, payeeName: e.target.value})}
                              className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                              placeholder="请输入收款人姓名"
                              required
                            />
                          </div>
                          <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">联系方式 *</label>
                            <input
                              type="text"
                              value={expenseForm.payeeContact}
                              onChange={(e) => setExpenseForm({...expenseForm, payeeContact: e.target.value})}
                              className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                              placeholder="手机号或邮箱"
                              required
                            />
                          </div>
                        </div>
                        
                        {/* 银行信息 */}
                        <div className="grid grid-cols-2 gap-4">
                          <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">开户银行 *</label>
                            <input
                              type="text"
                              value={expenseForm.payeeBank}
                              onChange={(e) => setExpenseForm({...expenseForm, payeeBank: e.target.value})}
                              className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                              placeholder="如: 中国工商银行"
                              required
                            />
                          </div>
                          <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">银行账号 *</label>
                            <input
                              type="text"
                              value={expenseForm.payeeAccount}
                              onChange={(e) => setExpenseForm({...expenseForm, payeeAccount: e.target.value})}
                              className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                              placeholder="请输入银行账号"
                              required
                            />
                          </div>
                        </div>
                        
                        {/* 凭证上传 */}
                        <div>
                          <label className="block text-sm font-medium text-gray-700 mb-2">上传凭证 *</label>
                          <div className="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center">
                            <div className="text-gray-400 mb-2">
                              <svg className="mx-auto h-12 w-12" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                                <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                              </svg>
                            </div>
                            <div className="text-sm text-gray-600 mb-2">点击上传发票、收据等凭证</div>
                            <div className="text-xs text-gray-500">支持 JPG、PNG 格式</div>
                            <input
                              type="file"
                              accept="image/*"
                              onChange={async (e) => {
                                const file = e.target.files[0]
                                if (file) {
                                  try {
                                    // 先显示本地预览
                                    setExpenseForm({...expenseForm, receiptImage: file})
                                    const reader = new FileReader()
                                    reader.onload = (e) => {
                                      setExpenseForm({...expenseForm, receiptImage: file, receiptImageUrl: e.target.result})
                                    }
                                    reader.readAsDataURL(file)
                                    
                                    // 上传到服务器获取真实URL
                                    const uploadResult = await databaseService.uploadImage(file, 'receipts')
                                    setExpenseForm(prevForm => ({...prevForm, 
                                      receiptImage: file, 
                                      receiptImageUrl: uploadResult.url,
                                      receiptImagePath: uploadResult.path
                                    }))
                                  } catch (error) {
                                    console.error('图片上传失败:', error)
                                    alert('图片上传失败，请重试')
                                  }
                                }
                              }}
                              className="hidden"
                              id="receipt-upload"
                            />
                            <label htmlFor="receipt-upload" className="mt-2 inline-block bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 cursor-pointer">
                              选择文件
                            </label>
                            {expenseForm.receiptImageUrl && (
                              <div className="mt-2">
                                <img 
                                  src={expenseForm.receiptImageUrl} 
                                  alt="凭证预览"
                                  className="max-w-full h-auto max-h-32 rounded-lg border border-gray-200 mx-auto"
                                />
                              </div>
                            )}
                          </div>
                        </div>
                      </div>
                    )}

                    {/* 按钮区域 */}
                    <div className="flex justify-between pt-4">
                      <button
                        type="button"
                        onClick={() => setShowExpenseModal(false)}
                        className="px-4 py-2 text-gray-600 hover:text-gray-800"
                      >
                        取消
                      </button>
                      
                      <div className="flex space-x-3">
                        {expenseStep > 1 && (
                          <button
                            type="button"
                            onClick={() => setExpenseStep(expenseStep - 1)}
                            className="px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50"
                          >
                            ← 上一步
                          </button>
                        )}
                        
                        {expenseStep < 3 ? (
                          <button
                            type="button"
                            onClick={() => setExpenseStep(expenseStep + 1)}
                            className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
                          >
                            下一步 →
                          </button>
                        ) : (
                          <button
                            type="submit"
                            className="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700"
                          >
                            提交申请
                          </button>
                        )}
                      </div>
                    </div>
                  </form>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

    </div>
  )
}
